[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Paragliding Gadgets Setup",
    "section": "",
    "text": "Preface\nThis is book has the details for my gadgets that I use for paragliding.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "README.html",
    "href": "README.html",
    "title": "1  My Paragliding Setup",
    "section": "",
    "text": "1.1 Procedure on launch\nThe only little bit of friction in this set up is the hotspot setup and making sure the Poke 3 has a wifi connection before launching XCTrack. Without that, it’s just power on the devices and starting the XCTrack app.",
    "crumbs": [
      "Overview",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My Paragliding Setup</span>"
    ]
  },
  {
    "objectID": "README.html#procedure-on-launch",
    "href": "README.html#procedure-on-launch",
    "title": "1  My Paragliding Setup",
    "section": "",
    "text": "Power on the Poke 3\nOn Android phone, start WiFi hotspot\nConfirm that the Poke 3 is connected to the phone’s WiFi\nPower on the BlueFlyVario vario\nStart XCTrack\nConfirm that Bluetooth, GPS and live tracking work\n\n\n\nXCTrack status bar with GPS, Bluetooth, live tracking and battery are all good\n\n\nPower on the Media Button and confirm pressing left-right shifts XCTrack displays",
    "crumbs": [
      "Overview",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My Paragliding Setup</span>"
    ]
  },
  {
    "objectID": "README.html#gadget-details",
    "href": "README.html#gadget-details",
    "title": "1  My Paragliding Setup",
    "section": "1.2 Gadget details",
    "text": "1.2 Gadget details\n\n1.2.1 Vario: BlueFlyVario with Bluetooth & GPS v22\nI’ve got the BlueFlyVario with Bluetooth & GPS v22. We ordered two on 2022-05-12 for 348 AUD (~240 USD) and received them 2022-05-29.\n\nWeight: 48 g\nDimensions: 58 x 36 x 16 mm\nBattery: ~8 hours (w/ Bluetooth & electromagnetic transducer running). 2-3 hours to fully charge. Observation: A five-hour (sic!) flight took it from 100% down to 46% (3.828V; 3 beeps)\nPower button: click to turn ON, long press to turn OFF\nPower button when already ON: short press toggles audio ON, BUZZER, and OFF. This is easy to press during a flight.\nBattery status (during startup):\n\nFirst beep is a 1.0s beep at 4000 Hz\nFollowed by 1-6 “battery” beeps (indicating 3.6-4.2 V)\nFollowed by a short 0.2s beep at 4000 Hz\n\nLED lights:\n\nBLUE (Bluetooth):\n\nFlash every second =&gt; Bluetooth scanning\nDouble flash every second =&gt; connected\nSolid =&gt; Bluetooth module is disabled (settings SecondsBluetoothWait). Fix by restarting vario\n\nORANGE (GPS):\n\n1.0s flashing =&gt; GPS 3D fix\noff =&gt; no GPS fix\n\nGREEN:\n\nDuring startup\nWhen pressing button\nWhen lift beep sounds (setting GreenLED)\n\nRED:\n\nCharging (turns off if full charged, but may stays on for trickle charging)\n\n\nTrack logs:\n\nCapacity: ~60 hours at one-second intervals\nAlways on: when GPS has 3D fix (ORANGE flash)\n\n\n\n\n1.2.2 Display: ONYX BOOX Poke 3 Android 10 e-reader\nI ordered the ONYX BOOX Poke 3 e-reader from BestBuy USA on 2022-05-13 for 190 USD and received it on 2022-05-19.\n\nWeight: 150 g\nDimensions: 153 x 107 x 6.8 mm\nScreen: 6.0 inch (90 x 120 mm), 1072 x 1448 px (300 ppi), 16 gray scales\nAndroid: 10\nGoogle Play Store: yes (requires manual one-time activation)\nSpeaker: no\nXCTrack: Install and update via APK (changelog)\nBattery: 8-10 hours(?). Observation: A five-hour (sic!) flight took it from from 97% to 50% (running XCTrack in the background and an auto-reloading website with live wind data in the foreground)",
    "crumbs": [
      "Overview",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My Paragliding Setup</span>"
    ]
  },
  {
    "objectID": "README.html#configuration",
    "href": "README.html#configuration",
    "title": "1  My Paragliding Setup",
    "section": "1.3 Configuration",
    "text": "1.3 Configuration\n\n1.3.1 Poke 3 and XCTrack\nThe Poke graphical user interface (GUI) can be a bit peculiar at first. For example, it uses it’s own on-screen keyboard and it also has a, so called, ‘Navigation Ball’. It’s a small round blob that sits in front on any app you open. You’ll need it. If you click it, you’ll get access to more action buttons, and one commonly used one is the “back” button.\nIn order for XCTrack to go into landscape, which you can set inside XCTrack by going to ‘Preferences’ and then ‘Orientation’, you must configure the app such that it can override the ‘Rotation’ settings that the Poke GUI uses, which is ‘Portrait’ by default. To do this:\n\nLong press ‘XCTrack’ app icon\nSelect ‘Optimize’\nGo to the ‘Others’ tab\nDisable ‘Force to use system orientation’ (i.e. set it to OFF)\n\n\n\n1.3.2 Poke 3, BlueFlyVario, and XCTrack\nUse BlueFlyVario as an external GPS in XTrack:\n\nPairing: In Poke 3 Bluetooth settings, pair BlueFlyVario device (e.g. BlueFly-7D0D). No PIN required.\nEnable location: In Poke 3, open the ‘Control Center’ in the Poke 3/Android pulldown menu. There you should see WiFi and Bluetooth buttons at the very top. Below are two panels, both showing a set of icons that can be used to toggle settings on and off. The top panel, of these two, has a volume bar and the bottom one a brightness bar and a contrast bar. In the top panel, enable ‘Location’ by clicking on the map icon. This icon might be in the second “subscreen”, which you can get to by swiping left inside the panel. IMPORTANT: if this is not done, then you cannot connect the BlyFlyVario device in XCTrack (at least not on Poke 3).\nExternal GPS and External Barometer in XCTrack: In XCTrack, go to ‘Preferences’, then ‘Connections & Sensors’.\n\nUnder ‘Connection’, click ‘External sensors’, select ‘Bluetooth sensor’ and click ‘OK’. It will scan for paired Bluetooh devices. Select the BlueFlyVario device (e.g. BlueFly-7D0D).\nUnder ‘GPS’, enable ‘Use external GPS’. IMPORTANT: If you forget this, XCTrack will never recieve GPS data therefore only report on the lift and sink (from the barometer in BlueFlyVario). When it works, XCTrack will give the ‘GPS signal OK’ notification and it will show GPS altitute, the speed, flight arrow, and more even when on the group.\nUnder ‘Atmospheric pressure sensor’, enable ‘Use external barometer’. IMPORTANT: If you forget this, I think XCTrack will use the GPS data, which is much less sensitive, to report on lift and sink.\n\n\n\n\n1.3.3 BlueFlyVario setting\nOptions to change hardware settings:\n\nAndroid: BlueFlyVario Android App (installable on Poke 3) Download: https://blueflyvario.com/files/BlueFlyVario.apk\nAny operating system: BFV Desktop Java Application Download: https://blueflyvario.com/files/BFVDesktop0.85.zip\n\nFor Poke 3, which does not have a speaker, change:\n\nUseAudioWhenConnected: true (default false)\n\n\n\n1.3.4 Recoil Media Button settings\nThis device broadcasts itself on Bluetooth as ‘PCR-1’. To pair to the Poke 3, go to the Bluetooth settings and locate ‘PCR-1’ under ‘Available devices’. Then click on ‘PCR-1’ to pair it. When paired it will appear under ‘CONNECTED DEVICES’. When powered off, it will be listed under ‘PAIRED DEVICES’, which are the devices that the Poke 3 remembers.\nWhen powered on, the Poke 3 will immediately connect to the Recoil Media Button device.\nThe device goes automatically into a sleep mode after 20 minutes. This is to preserve battery. Pressing any button (Previous track, Next track, Volumn Down, Volume Up, PAUSE/PLAY) will wake it up with very little delay.\nTo configure what the buttons should do, open XCTrack, go to ‘Preferences’, andthen ‘Key bindings’. I use the following settings:\n\nSwitch to page left: Previous track\nSwitch to page right: Next track\nZoom map in: None\nZoom map out: None\nToggle map panning: Long press: 85\nPan map LEFT in panning mode: Long press: Previous track\nPan map RIGHT in panning mode: Long press: Next track\nPan map UP in panning mode: Volumn Up\nPan map DOWN in panning mode: Volumn Down\nShow menu: None\nRevert to previous waypoint in task: None\nAdvance to previous waypoint in task: None\nIncrease display brightness: None\nDecrease display brightness: None",
    "crumbs": [
      "Overview",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>My Paragliding Setup</span>"
    ]
  },
  {
    "objectID": "blueflyvario/BlueFlyVario.html",
    "href": "blueflyvario/BlueFlyVario.html",
    "title": "2  Bluefly Vario",
    "section": "",
    "text": "2.1 Overview",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bluefly Vario</span>"
    ]
  },
  {
    "objectID": "blueflyvario/BlueFlyVario.html#overview",
    "href": "blueflyvario/BlueFlyVario.html#overview",
    "title": "2  Bluefly Vario",
    "section": "",
    "text": "Weight: 48 g\nDimensions: 58 x 36 x 16 mm\nBattery: ~8 hours (w/ Bluetooth & electromagnetic transducer running). 2-3 hours to fully charge. Observation: A five-hour (sic!) flight took it from 100% down to 46% (3.828V; 3 beeps)\nPower button: click to turn ON, long press to turn OFF\nPower button when already ON: short press toggles audio ON, BUZZER, and OFF. This is easy to press during a flight.\nBattery status (during startup):\n\nFirst beep is a 1.0s beep at 4000 Hz\nFollowed by 1-6 “battery” beeps (indicating 3.6-4.2 V)\nFollowed by a short 0.2s beep at 4000 Hz\n\nLED lights:\n\nBLUE (Bluetooth):\n\nFlash every second =&gt; Bluetooth scanning\nDouble flash every second =&gt; connected\nSolid =&gt; Bluetooth module is disabled (settings SecondsBluetoothWait). Fix by restarting vario\n\nORANGE (GPS):\n\n1.0s flashing =&gt; GPS 3D fix\noff =&gt; no GPS fix\n\nGREEN:\n\nDuring startup\nWhen pressing button\nWhen lift beep sounds (setting GreenLED)\n\nRED:\n\nCharging (turns off if full charged, but may stays on for trickle charging)\n\n\nTrack logs:\n\nCapacity: ~60 hours at one-second intervals\nAlways on: when GPS has 3D fix (ORANGE flash)",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bluefly Vario</span>"
    ]
  },
  {
    "objectID": "blueflyvario/BlueFlyVario.html#footnotes",
    "href": "blueflyvario/BlueFlyVario.html#footnotes",
    "title": "2  Bluefly Vario",
    "section": "",
    "text": "The serial port is called ‘ttyUSB0’ on my Ubuntu 22.04 Linux desktop. It might be called something different on other computers.↩︎",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Bluefly Vario</span>"
    ]
  },
  {
    "objectID": "blueflyvario/docs/BFVDesktop.html",
    "href": "blueflyvario/docs/BFVDesktop.html",
    "title": "3  How to use BFV Desktop",
    "section": "",
    "text": "3.1 Linux",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>How to use BFV Desktop</span>"
    ]
  },
  {
    "objectID": "blueflyvario/docs/BFVDesktop.html#linux",
    "href": "blueflyvario/docs/BFVDesktop.html#linux",
    "title": "3  How to use BFV Desktop",
    "section": "",
    "text": "3.1.1 Requirements\n\nJava Run-Time\nSudo permissions (required for using the serial connection)\nUSB cable\n\n\n\n3.1.2 Installation\n$ wget https://blueflyvario.com/files/BFVDesktop0.87.zip\n$ unzip BFVDesktop0.87.zip\n$ cd BFVDesktop0.87\n\n\n3.1.3 Usage\n\nConnect the BlueFlyVario to computer via USB cable\nLaunch the BFVDesktop software as administrator (see below)\nSelect serial port ttyUSB0 (with default 115,000 baud rate)\nClick ‘Connect’\n\nWhen connecting, the software sends command $BST* to the vario, which responds with a never-ending stream of data. The ‘Raw Rx’ panel will show something like:\n$BST*\nPRS 18738\nPRS 18737\nPRS 18738\n$GNGGA,200729.000,3752.105089,N,12214.799547,W,1,4,1.90,176.023,M,-24.904,M,,*76\nPRS 1873A\nPRS 1873B\nPRS 1873A\n...\n\n\n3.1.4 Launching BFVDesktop\nTo launch BFVDesktop, call the following while distr/ being the current directory:\n$ sudo java -classpath \"BFVDesktop.jar:jSerialComm.jar\" bfv.desktop.BFVDesktop\nAlternatively, you can use the equivalent:\n$ sudo CLASSPATH=\"BFVDesktop.jar:jSerialComm.jar\" java bfv.desktop.BFVDesktop\nThis opens the BFVDesktop window:\n\n\n\nScreenshot of the BFVDesktop v0.85 window\n\n\n\n\n3.1.5 Troubleshooting\nIf you run Java 1.8 and get:\nException in thread \"main\" java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper\n    at java.awt.Toolkit.loadAssistiveTechnologies(Toolkit.java:807)\n    at java.awt.Toolkit.getDefaultToolkit(Toolkit.java:886)\n    at sun.swing.SwingUtilities2.getSystemMnemonicKeyMask(SwingUtilities2.java:2041)\n    at javax.swing.plaf.basic.BasicLookAndFeel.initComponentDefaults(BasicLookAndFeel.java:1158)\n    at javax.swing.plaf.metal.MetalLookAndFeel.initComponentDefaults(MetalLookAndFeel.java:431)\n    at javax.swing.plaf.basic.BasicLookAndFeel.getDefaults(BasicLookAndFeel.java:148)\n    at javax.swing.plaf.metal.MetalLookAndFeel.getDefaults(MetalLookAndFeel.java:1577)\n    at javax.swing.UIManager.setLookAndFeel(UIManager.java:539)\n    at javax.swing.UIManager.setLookAndFeel(UIManager.java:579)\n    at javax.swing.UIManager.initializeDefaultLAF(UIManager.java:1349)\n    at javax.swing.UIManager.initialize(UIManager.java:1459)\n    at javax.swing.UIManager.maybeInitialize(UIManager.java:1426)\n    at javax.swing.UIManager.getUI(UIManager.java:1006)\n    at javax.swing.JPanel.updateUI(JPanel.java:126)\n    at javax.swing.JPanel.&lt;init&gt;(JPanel.java:86)\n    at javax.swing.JPanel.&lt;init&gt;(JPanel.java:109)\n    at javax.swing.JPanel.&lt;init&gt;(JPanel.java:117)\n    at bfv.desktop.BFVDesktop.&lt;init&gt;(Unknown Source)\n    at bfv.desktop.BFVDesktop.main(Unknown Source)\nthen comment out the assistive_technologies setting in /etc/java-8-openjdk/accessibility.properties [1]:\n$ cat /etc/java-8-openjdk/accessibility.properties\n#\n# The following line specifies the assistive technology classes\n# that should be loaded into the Java VM when the AWT is initailized.\n# Specify multiple classes by separating them with commas.\n# Note: the line below cannot end the file (there must be at\n# a minimum a blank line following it).\n#\nassistive_technologies=org.GNOME.Accessibility.AtkWrapper\nYou need sudo rights to do this. You can comment this out using:\n$ sudo sed -i -E \"s/^(assistive_technologies=)/## [Disabled by $USER on $(date --rfc-3339=seconds)] # \\\\1/\" /etc/java-8-openjdk/accessibility.properties\nI’ve verified that this is sufficient on my Ubuntu 22.04 machine with Java 1.8.0;\n$ java -version\nopenjdk version \"1.8.0_362\"\nOpenJDK Runtime Environment (build 1.8.0_362-8u362-ga-0ubuntu1~22.04-b09)\nOpenJDK 64-Bit Server VM (build 25.362-b09, mixed mode)",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>How to use BFV Desktop</span>"
    ]
  },
  {
    "objectID": "blueflyvario/docs/BFVDesktop.html#how-to",
    "href": "blueflyvario/docs/BFVDesktop.html#how-to",
    "title": "3  How to use BFV Desktop",
    "section": "3.2 How to",
    "text": "3.2 How to\n\n3.2.1 Identify firmware version\nWith vario physically connected via USB cable but not connected in BFVDesktop:\n\nTurn off vario\nConnect to vario (ttyUSB0)\nTurn vario back on\n\nYou should now see something like:\n\nHardware Version: 22.2.566\nAlt:\nTemp:\nBAT: 4.27 V\n\nwhich tells us that we’re running firmware v22.2 release 566. From https://www.blueflyvario.com/files/v22/, we can see that it was released on 2022-10-08.\nNote that the vario will only send the firmware version when it is turned on, which is BFVDekstop has to be connected to it via cable when the vario is turned on.\nWe can also find the firmware version from the raw data stream:\n$BST*\n\\0\nBluefly Power On\nBFV 22.2 566\nBlueFlyVario_BLUETOOTH_GPS_IGC_22.2.566\nBST BFK BFL BFP BAC BAD BTH BFQ BFI BSQ BSI BFS BOL BOS BRM BVL BOM BOF BQH BRB BPT BUR BLD BR2 BHV BHT BBZ BZT BSM BUP BTT BDM BQS BGL BSN BFN BMP BPN\n...",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>How to use BFV Desktop</span>"
    ]
  },
  {
    "objectID": "blueflyvario/docs/BFVDesktop.html#references",
    "href": "blueflyvario/docs/BFVDesktop.html#references",
    "title": "3  How to use BFV Desktop",
    "section": "3.3 References",
    "text": "3.3 References\n\n[1] https://stackoverflow.com/questions/15260989",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>How to use BFV Desktop</span>"
    ]
  },
  {
    "objectID": "blueflyvario/docs/Updating_firmware.html",
    "href": "blueflyvario/docs/Updating_firmware.html",
    "title": "4  How to update the BlueFlyVario firmware",
    "section": "",
    "text": "4.1 Gist\nFollow the instructions on https://www.blueflyvario.com/firmware/.\nFor the BlueFlyVario_Bluetooth_GPS_IGC_v22 device, all firmware versions are available at: https://www.blueflyvario.com/files/v22/",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>How to update the BlueFlyVario firmware</span>"
    ]
  },
  {
    "objectID": "blueflyvario/bluefly_parser.html",
    "href": "blueflyvario/bluefly_parser.html",
    "title": "5  Parsing the Raw Data Stream",
    "section": "",
    "text": "5.1 Capture startup stream\nFirst, turn off the Bluefly device. Second, launch:\nThird, turn on Bluefly. After it started, turn it off again. Finally, press Ctrl-A and ‘X’ to exit minicom. To see the startup stream, call:\nThis tells us we’re running firmware v22.2 release 566. From https://www.blueflyvario.com/files/v22/, we can see that BTH_GPS_IGC_22.2.566.hex was released on 2022-10-08.\nFrom FlyingAl (2021), we learn that pressure data is reported as PRS &lt;hexint&gt;, e.g.\nThe entries starting with a dollar sign ($) are National Marine Electronics Association (NMEA) sentences1. Those can be parsed using tools such as Python package pynmea2 (https://github.com/Knio/pynmea2) and R package nmea (https://github.com/paleolimbot/nmea).",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Parsing the Raw Data Stream</span>"
    ]
  },
  {
    "objectID": "blueflyvario/bluefly_parser.html#capture-startup-stream",
    "href": "blueflyvario/bluefly_parser.html#capture-startup-stream",
    "title": "5  Parsing the Raw Data Stream",
    "section": "",
    "text": "sudo minicom --baudrate=115200 --device=/dev/ttyUSB0 --capturefile=bluefly.out\n\n$ head bluefly.out \n\nBluefly Power On\nBFV 22.2 566\nBlueFlyVario_BLUETOOTH_GPS_IGC_22.2.566\nBST BFK BFL BFP BAC BAD BTH BFQ BFI BSQ BSI BFS BOL BOS BRM BVL BOM BOF BQH BRB BPT BUR BLD BR2 BHV BHT BBZ BZT BSM BUP BTT BDM BQS BGL BSN BFN BMP BPN\nSET 13622 100 20 1 1 1 180 1000 100 400 100 200 5 190 100 1000 0 1 21325 51 1 0 0 624 20 3600 0 60 100 0 2000 0 0 1 1511 93 50 \"NKN\"\nSPI_Flash JDEC:BF 26 43\n$PGACK,SW_INI_ANT_INPUT_OK*31\n$PMTK011,MTKGPS*08\n$PMTK010,001*2E\n\n\nPRS 18276\nPRS 18278\nPRS 1827B\nPRS 18279\n\n\n\n\n\nFlyingAl. 2021. BlueFlyVario Hardware Settings Manual V1.8. https://www.blueflyvario.com/files/BFV_HardwareSettings_Manual_v1.8.pdf.",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Parsing the Raw Data Stream</span>"
    ]
  },
  {
    "objectID": "blueflyvario/bluefly_parser.html#footnotes",
    "href": "blueflyvario/bluefly_parser.html#footnotes",
    "title": "5  Parsing the Raw Data Stream",
    "section": "",
    "text": "NMEA 0183.↩︎",
    "crumbs": [
      "Bluefly Vario",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Parsing the Raw Data Stream</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html",
    "href": "onyx-poke/README.html",
    "title": "6  ONYX Poke Device",
    "section": "",
    "text": "6.1 Activate Google Play Store\nThe Google Play Store app is not working out of the box, which is because the ONYX Poke 3 is not a certified Android device. The workaround is to override this and manual register your device. To do this,\nThe above registration didn’t work for me when I first tried it back in May/June 2022. Then I have up. I then revisited August 2023, and the registration worked.\nWARNING: It is up to you to decide whether you trust the Poke device and Boox to do the following. If not, you can always create a separate Google Account.\nSource: YouTube video How to activate google play (Firmware V3.2)",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html#activate-google-play-store",
    "href": "onyx-poke/README.html#activate-google-play-store",
    "title": "6  ONYX Poke Device",
    "section": "",
    "text": "Go to Apps\nClick on the “hamburger” menu and select ‘App Management’\nEnable Google Play: ON\nClick ‘GSF ID’ (showing a unique ID for your personal device) to get to Google’s Device registration page.\nLog into your Google Account.\nClick ‘Register’ (after validating the reCAPTCHA)",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html#transfer-files",
    "href": "onyx-poke/README.html#transfer-files",
    "title": "6  ONYX Poke Device",
    "section": "6.2 Transfer files",
    "text": "6.2 Transfer files\nThere are several options to transfer files back and forth between a computer or a smartphone and the Poke device. I found that the ‘BOOXDrop’ alternative is quite convenient since it requires no login or account setup.\nI don’t think one can transfer these files via the ONYX Cloud Storage; it looks like you can only store notes and books via the cloud storage. See the Appendix for my notes on this.\n\n6.2.1 BOOXDrop\nEach BOOX device runs a built-in web server that can be access by other devices on the same local network (e.g. on the same WiFi network). [Comment: I need to figure out how to disable this /Henrik 2023-04-30]. To find the website address for your device,\n\nGo to ‘Apps’\nClick ‘BOOXDrop’ (might be grouped under ‘Onyx apps’)\n\nThat will should you a URL that looks something like http://192.168.1.8:8085, where 192.168.1.8 is the IP number of the device (yours will be different) on your local network (e.g. WiFi). The 8085 number at the end is a port number, and we all have the same one. If you’re lazy to type this in on your phone, you can scan the QR code.\n\nOpen your Poke’s BOOXDrop URL in your computer’s web browser. Your Poke and your computer must be connected to the same local network (e.g. WiFi). This will open up a webpage title ‘BOOX Drop’ where you can browser the files on your Poke, and upload (‘Send to BOOX’) and download (‘Save to Computer’) files.",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html#update-firmware",
    "href": "onyx-poke/README.html#update-firmware",
    "title": "6  ONYX Poke Device",
    "section": "6.3 Update firmware",
    "text": "6.3 Update firmware\nI’m running firmware 2023-04-20_11-32_3.3.2_6c3976585 (last checked 2023-08-15).",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html#install-apps-by-apk-files",
    "href": "onyx-poke/README.html#install-apps-by-apk-files",
    "title": "6  ONYX Poke Device",
    "section": "6.4 Install apps by APK files",
    "text": "6.4 Install apps by APK files\nI failed to set up Google App Store on the ONYX Poke 3. The only way I found to install apps is by download their APK file.",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "onyx-poke/README.html#appendix",
    "href": "onyx-poke/README.html#appendix",
    "title": "6  ONYX Poke Device",
    "section": "6.5 Appendix",
    "text": "6.5 Appendix\n\n6.5.1 Create ONYX Account (optional/not useful)\nOn Poke 3,\n\nGo to ‘Settings’.\nAt the very top, click on the icon for ‘ONYX Account’ (“Get 10GB Cloud Storage for Notes Sync and Other Cloud Services”).\nSelect ‘Servers’ (I picked ‘EUR(eur.boox.com)’ because of EU’s stricter privacy rules).\nScroll down to ‘Login Methods’ and select the ‘Email’ icon (so you can register without having to give out your phone number).\nUnder ‘Email’, enter your email address.\nClick ‘Get verification code’\nCheck your email for the six-digit verification code.\nEnter verification code.\nCheck that you agree on the terms and conditions.\nClick ‘Login’.\n\nYou should now be logged into the ONYX account, which you can confirm by going to the ‘Settings’ screen. There it should now say ‘’ (“Cloud Storage: 0/10 GB”) at the very top.\n\n\n6.5.2 Connect to ONYX Cloud Storage from web browser\nEach ONYX device gets 10 GB of free cloud storage. This requires your to sign up for an account (see Appendix for instructions).\nOn your computer, or smart phone,\n\nGo to your ONYX account server (e.g. https://eur.boox.com) in the web browser.\nEnter your login information (e.g. email address).\nClick ‘Obtain Verification Code’.\nCheck your emails for the one-time verification code.\nCheck ‘Agree …’.\nClick ‘Sign in’.\n\nYou should now see a website titled ‘BOOX’ with menu items ‘Notes’, ‘BooxDrop’, ‘Library’ and ‘Import Reading’.\nComments: It looks like ‘BooxDrop’ page here also requires your computer and Poke to be on the same local network. In other words, I don’t think you can transfer files via ‘BooxDrop’ over the cloud or via the cloud storage.",
    "crumbs": [
      "BOOK Onyx Poke",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>ONYX Poke Device</span>"
    ]
  },
  {
    "objectID": "xctrack/README.html",
    "href": "xctrack/README.html",
    "title": "7  XCTrack",
    "section": "",
    "text": "7.1 Sharing Pages layout with others\nThese instructions assumes you run XCTrack 0.9.8.7 (2023-04-26) or newer.",
    "crumbs": [
      "XC Track",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>XCTrack</span>"
    ]
  },
  {
    "objectID": "xctrack/README.html#sharing-pages-layout-with-others",
    "href": "xctrack/README.html#sharing-pages-layout-with-others",
    "title": "7  XCTrack",
    "section": "",
    "text": "7.1.1 Export “Pages” layouts\n\nGo to ‘Preferences’ -&gt; ‘Export & Import config’.\nClick ‘Export configuration’.\nSelect ‘PAGES ONLY’.\n\nYou will get a pop-up window titled ‘Export finished’ that says something like “Current XCTrack configuration saved to file /storage/emulated/0/Android/data/org.xcontest.XCTrack/files/Config/2023-04-30_pages_00.xcfg`.\nIf you have Sharing apps configured on your device, click ‘SHARE’ and select method for sharing this file. Otherwise click ‘CLOSE’ and use other ways to transfer the file under /storage/emulated/0/Android/data/org.xcontest.XCTrack/files/Config/ on the Android device to another device or storage. If you’re using a ONYX Poke device, you can use ‘BOOXDrop’.\n\n\n7.1.2 Import “Pages” layouts\nIf you received a XCTrack configuration file from some one else, either one that contains their full configuration, or just their pages configuration, you can import their “pages” settings to your XCTrack app.\nAfter having downloaded the *.xcfg file to the Android device where your run XCTrack, open XCTrack and:\n\nGo to ‘Preferences’ -&gt; ‘Export & Import config’.\nClick ‘Import configuration’.\nClick ‘OTHER …’ (you might see an error message too)\nYou will now see an Android file-navigator window. Navigate to the *.xcfg file you wish to import, and click on it.\nIf you’re importing a full XCTrack configuration, you will get three options:\n\nReplace all (all your config and pages will be overwritten)\nReplace pages only (overwrite your pages and widgets only)\nAdd pages only (nothing will be overwritten, new pages will be added after yours)\n\nChoose either ‘Replace pages only’ or ‘Add pages only’.\nClick ‘CONTINUE’.\nIf you choose anything else than ‘Add pages only’, you need to confirm too. Click ‘YES’.\nYou should see ‘Configuration successfully imported’. Click ‘OK’.\n\nDone.\nYou can now go back to ‘Preferences’ -&gt; ‘Pages layout’ to confirm that the new pages have been imported correctly.\nAlso, make sure ‘Preferences’ -&gt; ‘Display’ -&gt; ‘Orientation’ is set to either portrait or landscape of the pages you want to use. This is important, because pages designed in landscape mode will only work when the XCTrack display is set to be in landscape mode, and vice versa for portrait mode.",
    "crumbs": [
      "XC Track",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>XCTrack</span>"
    ]
  },
  {
    "objectID": "xctrack/README.html#backing-up-and-restoring-xctrack-configuration",
    "href": "xctrack/README.html#backing-up-and-restoring-xctrack-configuration",
    "title": "7  XCTrack",
    "section": "7.2 Backing up and Restoring XCTrack configuration",
    "text": "7.2 Backing up and Restoring XCTrack configuration\nIt’s always good to backup your XCTrack settings once in a while. This is also the easiest way to get started again if you get a new Android device.\n\n7.2.1 Backing up all your XCTrack settings\nTo back up your XCTrack settings to a &lt;date&gt;_&lt;index&gt;.xcfg file under /storage/emulated/0/Android/data/org.xcontest.XCTrack/files/Config/ on the Poke,\n\nGo to ‘Preferences’,\nthen ‘Export & import config’ (or ‘Testing & Debug’ on XCTrack &lt;= 0.9.8.6), and\nclick ‘Export configuration’.\n\nYou will get a pop-up window titled ‘Export finished’ that says something like “Current XCTrack configuration saved to file /storage/emulated/0/Android/data/org.xcontest.XCTrack/files/Config/2023-04-30_backup00.xcfg`.\nThis will export your airspaces, portrait and landscape page layouts, pilot and glider names, connected Bluetooth varios, and other types of preferences set.\nImportantly, downloaded terrain maps and road maps will not be part of the exported *.xcfg. Your xcontest.org username and password will also not exported.\nIf you have configured your sharing on your Poke, you could click ‘SHARE’ to share via, say, Bluetooth or Email. I don’t have sharing configured, so I click ‘CLOSE’ at this point. I use the ‘Destiny’ app (https://f-droid.org/en/packages/com.leastauthority.destiny/) to send my settings to my computer.\n\n\n7.2.2 Restoring XCTrack configuration\nTo restore previously backed up XCTrack settings,\n\nGo to ‘Preferences’,\nthen ‘Export & import config’ (or ‘Testing & Debug’ on XCTrack &lt;= 0.9.8.6), and\nclick ‘Import configuration’.\nChoose an *.xcfg file to import (either among the listed ones or under ‘OTHER…’)\nConfirm ‘Really import configuration?’ by pressing YES.\nConfirm ‘Shut down XCTrack?’ by pressing YES.\nIn the XCTrack ‘App info’ display, click ‘FORCE STOP’, and then confirm by pressing ‘OK’.\nReopen XCTrack.",
    "crumbs": [
      "XC Track",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>XCTrack</span>"
    ]
  },
  {
    "objectID": "hamradio/README.html",
    "href": "hamradio/README.html",
    "title": "8  Ham Radio",
    "section": "",
    "text": "8.1 Baofeng UV-5R\nI use a Baofeng UV-5R since several years back. The reason for this is that they are easy to get in the US, the cost is only 40-50 USD, so it’s not a biggie to get a replacement, keep a backup, and buy spare batteries. The Baofeng UV-5R handset uses the a Kenwood compatible two-pin plug; one plug is 2.5mm and the other is 3.5mm and are 12mm apart. Because of this, I have a fair bit of head sets with push-to-talk (PTT) buttons to choose from. I place the PTT button on my left riser near my break handle, because that way I can easily transmit also in active air and while thermalling. I have the headset and the mic mounted permanently on my helmet.\nOn launch, I put on my helmet, let the cable hang down before I close my jacket, then I connect it together with the PTT cable that I run down the riser thought the carabiner, and at the end I plug it to the radio that is on my flight deck. I then turn on the radio to confirm that I can hear “Frequency mode” or “Channel mode” that the radio says when turned on. After this, I do a formal radio check.\nComment: According to Wikipedia, “the model variant Boafeng UV5R HT” is no longer sold in Germany and Switzerland and may not be used there.\nOur radio units:\nBatteries:",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ham Radio</span>"
    ]
  },
  {
    "objectID": "hamradio/README.html#baofeng-uv-5r",
    "href": "hamradio/README.html#baofeng-uv-5r",
    "title": "8  Ham Radio",
    "section": "",
    "text": "2 UV-5R MK4 with ‘MIRKIT’ on the front. Label on the back: Model: UV-5R MK4 Mirkit Edition, Voltage: 7.4V, Power: 8W, Frequency: 136-174 MHz/400-520 MHz, S/N: UV-5R MK4 A00163, S/N: UV-5R MK4 A00163. Purchased 2019-03-30 and 2019-06-14.\n4 UV-5R MK4 with ‘UV-5R MK4’ on the front. Label on the back: Model: UV-5R MK4 Max Power Mirkit Edition, Voltage: 7.4V, Power: 8W, Frequency: 136-174 MHz/400-520 MHz, S/N: UV-5R MK4 A21895. FCCID: 2AJGM-UV5R. Purchased 2021-12-20.\n\n\n\nModel: BL-5. Li-ion battery 7.4V 1800mAh.\n\n\n8.1.1 PTT Headset\nThe PTT headset I use is 15-20 USD on Amazon.\n \nIt has two flat ear pieces with speakers and a microphone on a three-way splitted cable with a male threaded ~13mm 5-pin circular connector1 at the end. You mount the ear pieces inside your helmet and let the cable, which reaches your chest, hang down. The Push-to-Talk (PTT) button sits on another cable that also terminates with a male 5-pin connector. The third part of this kit is a Y-split connector where one end is a standard male 2-pin type K headset connector that plugs into the radio, and the other two ends are female 5-pin connectors that connects to your headset and PTT, respectively.\n\n\n8.1.2 Alternative antennas\nThe Baofeng UV-5R handset uses a SMA (SubMiniature version A) connector for the antenna. The handset has a male connector (inside threads) and the antenna a female connector (outside threads).\n         \nIn addition to the antenna that comes with the radio, I have a Nagoya NA-771 40cm Whip VHF/UHF (144/430Mhz) Antenna (SMA-Female) (~20 USD on Amazon) (left), which I never really used, because I mount my radio on my flight deck and then this long antenna sticks too far out.\nI’ve recently started to experiment with a 72cm foldable tactical antenna with a coax extension cord ((~17 USD on Amazon](https://www.amazon.com/dp/B094R6GW8Y/)) (right). I place the antenna upside-down in my harness and pull the extension cord over my sholder and down to the radio unit. This adds an extra step of having to screw on the antenna before each launch. To avoid that, I keep it connected and let the radio hang from it while I connect my harness and put on the flightdeck. I use a 100cm extension cord (~11 USD on Amazon) in order to reach over my shoulder and down inside of my jacket to my flight deck.\nAnother alternative that I’ve considered would be a wire antenna, which is basically a wire (e.g. H07V-K 4) on an female SMA connector. See https://ham.stackexchange.com/questions/140/good-wire-for-wire-antenna#181 for how to build one.",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ham Radio</span>"
    ]
  },
  {
    "objectID": "hamradio/README.html#crt-france-fp-00-temporary",
    "href": "hamradio/README.html#crt-france-fp-00-temporary",
    "title": "8  Ham Radio",
    "section": "8.2 CRT France FP 00 (temporary)",
    "text": "8.2 CRT France FP 00 (temporary)\nI got a CRT France FP 00 radio in France 2023 when I was on the Saint Hilare launch realizing my the battery in my Baofeng radio was dead. I got it for 47 EUR from the Prevol shop at launch. I was lucky because it had the same headset connection as my Baofeng, so it worked with my PTT headset. It a Baofeng clone with the same configuration and menu items2. The battery and the charger, including the plug to the charging dock is different though. I haven’t tried, but it also looks like CHIRP (programming via cable) is not support (yet), e.g. https://chirp.danplanet.com/issues/9894.",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ham Radio</span>"
    ]
  },
  {
    "objectID": "hamradio/README.html#yaesu-ft-270r-legacy",
    "href": "hamradio/README.html#yaesu-ft-270r-legacy",
    "title": "8  Ham Radio",
    "section": "8.3 Yaesu FT-270R (legacy)",
    "text": "8.3 Yaesu FT-270R (legacy)\nIn the past, I used my Yaesu FT-270R radio with a custom-build push-to-talk (PTT) headset. It worked great, but once in a while, and always during flying trips, the headset connection to the radio broke. The problem with the Yaseu FT-270R is that it has a screw-in plug (see picture). The purpose of that is so that the plug does not fall out, but the problem was that slowly you end up twisting the cable too much so that the cables inside break. It happened twice to me at launch during flying trips. I loved the custom-made Glidecom Cloudbase Headset, but it was custom built by a guy in Oregon and delivery was flaky at best, so this solution became unreliable in the long run. I never managed to find another nicec headset, so I switched to a cheaper, lower-quality Baofeng radio.",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ham Radio</span>"
    ]
  },
  {
    "objectID": "hamradio/README.html#footnotes",
    "href": "hamradio/README.html#footnotes",
    "title": "8  Ham Radio",
    "section": "",
    "text": "It still unknown exactly what standard the 5-pin connectors are, if a standard at all. As far as I know, it is not a 5-pin DIN connector, because they have symmetrically located pins, whereas this headset has three pins on one side and two on the other (as if it missed the upper pin). It also has a thin rectangular guiding pin/hole in the center.↩︎\nI walked through the menu on the CRT-FP00 and the Baofeng UV-5R step by step and the menu entries were identical.↩︎",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Ham Radio</span>"
    ]
  },
  {
    "objectID": "hamradio/baofeng.html",
    "href": "hamradio/baofeng.html",
    "title": "9  Mirkit Baofeng HAM radio UV-5R MK4 8W",
    "section": "",
    "text": "9.1 Program radio via USB cable",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Mirkit Baofeng HAM radio UV-5R MK4 8W</span>"
    ]
  },
  {
    "objectID": "hamradio/baofeng.html#setup-chirp",
    "href": "hamradio/baofeng.html#setup-chirp",
    "title": "9  Mirkit Baofeng HAM radio UV-5R MK4 8W",
    "section": "9.2 Setup CHIRP",
    "text": "9.2 Setup CHIRP\n$ wget https://trac.chirp.danplanet.com/chirp_daily/LATEST/chirp-daily-20211221.flatpak\n$ sudo flatpak install chirp-daily-20211221.flatpak \nRequired runtime for com.danplanet.chirp/x86_64/master (runtime/org.freedesktop.Platform/x86_64/19.08) found in remote flathub\nDo you want to install it? [y/n]: y\nInstalling in system:\norg.freedesktop.Platform/x86_64/19.08             flathub                      a85bd015f173\norg.freedesktop.Platform.GL.default/x86_64/19.08  flathub                      54eadc8792db\norg.freedesktop.Platform.Locale/x86_64/19.08      flathub                      82c2332b3e80\norg.gtk.Gtk3theme.Ambiance/x86_64/3.22            flathub                      73fed99df212\norg.freedesktop.Platform.VAAPI.Intel/x86_64/19.08 flathub                      86a7fe067ae4\norg.freedesktop.Platform.openh264/x86_64/2.0      flathub                      73f998362a6f\ncom.danplanet.chirp/x86_64/master                 com.danplanet.chirp-3-origin 168fd65053cc\n  permissions: ipc, network, wayland, x11, devices\n  file access: home\nIs this ok [y/n]: y\nInstalling: org.freedesktop.Platform/x86_64/19.08 from flathub",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Mirkit Baofeng HAM radio UV-5R MK4 8W</span>"
    ]
  },
  {
    "objectID": "hamradio/baofeng.html#first-test",
    "href": "hamradio/baofeng.html#first-test",
    "title": "9  Mirkit Baofeng HAM radio UV-5R MK4 8W",
    "section": "9.3 First test",
    "text": "9.3 First test\nIdentify /dev/tty? for radio:\n\nTurn off radio\nUnplug the red MERKIT USB programming cable\nbefore=$(ls /dev/tty*)\nPlug in the red MERKIT USB programming cable\nafter=$(ls /dev/tty*)\ndiff &lt;(echo \"$before\") &lt;(echo \"$after\") =&gt; e.g. /dev/ttyUSB0\n\nRun CHIRP:\n\nTurn on radio on max volume\nchirpw\nMenu ‘Radio’ -&gt; ‘Download from radio’\nPort: /dev/ttyUSB0, Vendor: Baofeng, Model: ‘UV-5R’",
    "crumbs": [
      "Radio",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Mirkit Baofeng HAM radio UV-5R MK4 8W</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "FlyingAl. 2021. BlueFlyVario Hardware Settings Manual V1.8. https://www.blueflyvario.com/files/BFV_HardwareSettings_Manual_v1.8.pdf.",
    "crumbs": [
      "References"
    ]
  }
]